---
layout: post
title:  "Programmers - 단어변환"
date:   2019-12-12 13:00:59
author: mollangzzang
categories: Algorithm
tags:	Algorithm BFS
cover:  "/assets/algorithm.png"
---

```
#include <string>
#include <vector>
#include <queue>
using namespace std;
bool visited[50];

int chgCnt(string begin, string target , vector<string> &words){

    queue <pair<string,int>> q;
    for(int i =0; i<words.size(); i++) {
        int cmp =0;
        for(int j=0; j<begin.length(); j++) {
            if(begin[j] != words[i][j]) cmp++;
        }
        if(cmp == 1) {
            visited[i] = true;
            q.push({words[i],1});
        }
    }

    while(!q.empty()){

        string curString = q.front().first;
        int cnt = q.front().second;

        q.pop();

        if(curString == target) return cnt;

        for(int i =0; i<words.size(); i++) {
            if(!visited[i]) {
                int difCnt =0;
                for(int j= 0; j<curString.length(); j++) {
                    if(curString[j] != words[i][j]) difCnt++;
                }
                if(difCnt == 1){
                    q.push({words[i], cnt+1});
                    visited[i] = true;
                }
            }
        }


    }

    return 0;
}

int solution(string begin, string target, vector<string> words) {
    int answer = chgCnt(begin, target, words);
    return answer;
}

```

#### 구현

- 한번에 한글자씩 바꿀 수 있기 때문에, words를 탐색하면서 한글자가 다른 단어를 큐에 넣고 count 를 1 증가 시킨다.

- words 를 전부 탐색했음에도 종료조건을 만족시키지 못한다면 큐에 들어 갈 것이 더이상 없기 때문에 빠져나와서 0을 반환하고 종료하게 된다.

- 문자열 비교를 하면서 한글자만 다른경우에 큐에 넣었는데, 이 부분은 따로 빼서 bool 타입의 함수로 만들어서 정리하는 것이 코드가 훨씬 보기 깔끔했을 것 같다.