---
layout: post
title:  "2019-09-21 TIL"
date:   2019-09-22 12:13:01
author: mollangzzang
categories: TIL
---

## Algorithm

```
#include <string>
#include <vector>
#include <deque>

using namespace std;

typedef struct {

    int x,y;
}pos;

int solution(vector<int> priorities, int location) {
    int answer = 0;
    deque <pos> q;

    for(int i =0;i<priorities.size(); i++)
        q.push_back({priorities[i], i});

    while(!q.empty()){

        int curP = q.front().x;
        int curL = q.front().y;

        q.pop_front();

        if(!q.empty()) {
        for(int i =0; i<q.size(); i++)
        {
            if(q[i].x > curP) {
                q.push_back({curP, curL});
                break;
            }
            if(i == q.size() -1 && curP >= q[i].x){
                answer++;
                if(curL == location) return answer;
                }

            }
        }
    }

    return answer+1;
}
```

https://programmers.co.kr/learn/courses/30/lessons/42587

프로그래머스의 프린트 라는 문제이다.
큐를 이용하여 중요도가 높은 순서대로 출력하는 문제인데, 큐에서 중요도에 따라 접근하려고 할때 접근 하는 방식이 불편해서 deque 로 선언을 해서 접근을 했다.

더 나은 방식 없나 찾아보니

`#include <algorithm> 에 vector를 매개변수로 받는 max_element  라는 함수가 있었다.`

최대값을 찾아내주는 함수로, 이를 이용한 풀이법이 있었는데 이쪽이 더 나아보였다. 

또한 STL은 겉핧기로 알고있는 것 같아 시간이 날때 C++ STL에 대해 좀 더 자세히 알아볼 필요성을 느꼈다.

그리고 추가적으로 `C++`로 알고리즘만이 아닌 추가적으로 알아야 할 것들이 있는데,

`스마트포인터, 퓨처, 람다 함수, boost, curl, C++ 모던, 동기화 방법 STL, 코딩방법, 메모리 관리법` 등이 있다는 것 같다.

