---
layout: post
title: "비동기 통신"
date: 2020-11-19 13:00:59
author: mollangzzang
categories: TIL
tags: TIL
cover: "/assets/TIL.png"
---

## AJAX

Javascript의 라이브러리 중 하나로써, 브라우저가 가지고 있는 XMLHttpRequest 객체를 이용해서 전체 페이지를 새로 고치지 않고도 페이지의 일부만을 위한 데이터를 로드하는 기법

HTTP의 한계성(지속적인 연결의 불가능)을 극복하고자 나타난 기술이다.
일반적으로 웹의 프로토콜은 클라이언트에서 서버에 요청을 요구해야지 서버에서 반응하여 응답을 통해 화면이 출력이 되는데, 이 방법은 실시간으로 데이터를 갱신하거나 인터렉티브한 동적인 웹서비스를 구현하기엔 불가능한 요소로 작용된다.

AJAX 일반적으로 **폴링방식**, **롱폴링**, **스트리밍 방식**이 있다.

- 폴링

폴링방식은 화면을 업데이트 하는 함수를 작성하고 일정시간 마다 `setInterval` 함수를 통해서 업데이트 함수를 호출하는 방법

- 롱 폴링

롱 폴링 방식은 문자 그대로 오래 끌기라는 개념을 가지고 있다. 클라이언트에서 서버에 응답이 올 때까지 접속을 계속 유지하며, 응답이 오면 응답내용을 동시에 처리함과 동시에 방금 끊어지는 접속을 다시 유지하기 위한 새로운 코드를 작성해서 접속을 유지하는 방식

즉 **응답을 기다리다가 데이터 응답과 동시에 다시 재접속을 만드는 것**

- AJAX 문제점

요청과 응답이 계속 있는 형태이므로, 순수한 데이터로 응답이 되는 것이 아니라 Content-Type (컨텐츠 헤더)가 묻어서 응답이 이루어지기 때문에 **더미 트래픽**이 계속 발생하는 문제점이 있었다.

## WebSocket

HTML5 에서 생긴 기술로, 웹에서 사용하기 위한 소켓을 의미한다. 따라서 AJAX의 문제점인 더미트래픽이 발생하지 않는다.

HTTP Protocol 자체는 정보전달을 위해 특정 대상 구분없이 전송할 목적으로 만들어졌기에 해당 데이터가 문서인지, 애플리케이션인지에 대한 정보가 항상 들어있어야 하지만 그들만의 통신소켓에서는 이를 알려줄 필요가 없기 때문이다.

단점으로는 기존 인프라에 탑재되어 있는 구버전의 브라우저에는 호환이 되지 않다는 문제점
