---
layout: post
title: "데이터베이스 고립화"
date: 2020-10-23 13:00:59
author: mollangzzang
categories: TIL
tags: TIL DB
cover: "/assets/TIL.png"
---

## Isolation Level 필요성

DB는 무결성을 보장하는 것이 중요하다. 그리고 그 무결성을 보장하기 위한 특징이 **ACID(Atomicity, Consistency, Isolation, Durability)**이다.

DB는 ACID가 의미하는 바와 같이 Transaction이 원자적이면서도 독립적인 수행을 하도록해야 한다. 그래서 등장하는 개념이 **Locking**이다.

Locking은 **Transaction이 DB를 다루는 동안 다른 Transaction이 관여하지 못하게 막는다.**

하지만 무조건적인 Locking으로 동시에 수행되는 많은 Transaction들을 일렬로 대기시킨다면 DB의 성능은 현저하게 떨어진다.

반대로 응답성을 높이기 위해 Locking 범위를 줄인다면 잘못된 값이 처리 될 여지가 있다. 그래서 최대한 효율적인 Locking 방법이 필요하다.

이와 관련된 **Locking 방법이 Isolation Level**이다.

## Isolation Level (고립화 수준)

> 트랜잭션 실행 중 중간 연산 결과가 다른 트랜잭션으로 접근 불가하도록 하는 고립성을 유지하기 위한 데이터를 허용하는 수준

> 트랜잭션에서 일관성이 없는 데이터를 허용하도록 하는 수준

- Level 0 (Read Uncommitted)

  - 트랜잭션 처리 중인 데이터를 읽을 수 있음
  - 발생 가능한 현상
    - Dirty Read
    - Non-Repeatable Read
    - Phantom Read

- Level 1 (Read Committed)

  - 대부분의 DBMS에서 기본적으로 채택하는 레벨
  - 트랜잭션이 커밋되어 확정된 데이터만 읽을 수 있음
  - 발생 가능한 현상
    - Non-Repeatable Read
    - Phantom Read

- Level 2 (Repeatable Read)

  - 선행 트랜잭션이 데이터를 읽는 경우 종료 전까진 갱신/삭제 불가
  - 발생 가능한 현상
    - Phantom Read

- Level 3 (Serializable)
  - 선행 트랜잭션이 데이터를 읽는 경우 종료 전까진 갱신/삭제/삽입 불가
  - 완벽한 정합성을 보장하는 레벨

## Dirty Read

A Transaction 입장에서 아직 실행이 끝난지 않은 B Transaction에 의한 변경 사항을 보게되는 경우를 Dirty Read라고 한다.

만약 수정한 Transaction이 그 변경 사항을 롤백하면 그 데이터를 읽은 다른 Transaction은 Dirty 데이터를 가지고 있다고 말한다.

## Non-Repeatable Read

A Transaction에서 같은 질의를 여러번 하여도 B Transaction에서 변경한 사항을 반영하지 못하고 변경되기전의 같은 데이터만 읽어들이는 경우를 Non-Repeatable Read라고 한다.

즉 Non-Repeatable Read Level을 사용하는 DB에서는 다른 Transaction에 의한 변경 사항을 볼 수가 없다. 변경 사항을 보고 싶다면 Application에서 Transaction을 새로 시작해야 한다.

## Phantom Read

Phantom Read는 다른 Transaction에 의한 변경 사항으로 인해 현재 사용 중인 Transaction의 Where 절의 조건에 맞는 새로운 행이 생길 수 있는 경우에 관한 것이다.

예를 들어 잔고가 `$100` 미만인 계좌가 2개인 DB에서 `$100` 미만인 계좌를 찾는 Transaction이 있고 그 Transaction안에서 Select 쿼리를 2번 수행한다고 가정하자. 처음에 데이터를 읽으면 2개의 계좌를 찾게 된다.

이 때 다른 Transaction에서 `$0`인 계좌를 새로 만들면 두번째 데이터를 읽을 땐 3개의 계좌를 찾게 된다.
이처럼 Where 절의 조건에 맞는 새로운 행이 생길 수 있는 경우를 말한다.

DB의 Transaction Isolation Level에서 Phantom Read를 지원하면 새로운 유령(phantom)행이 나오지만 지원하지 않으면 새로 생긴 행을 볼 수 없다.

### Ref.

https://needjarvis.tistory.com/161
http://itwiki.kr/w/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98_%EA%B3%A0%EB%A6%BD%ED%99%94_%EC%88%98%EC%A4%80
https://goodgid.github.io/Transaction-Isolation-Level/
