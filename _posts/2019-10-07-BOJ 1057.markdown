---
layout: post
title:  "BOJ 1057"
date:   2019-10-07 13:00:59
author: mollangzzang
categories: Algorithm
tags:	Simulation
cover:  "/assets/algorithm.png"
---

```
#include <iostream>

using namespace std;

int N, a, b;

int solve() {

	int round = 1;

	while (N) {

		if (b > a && b - a == 1 && b % 2 == 0) return round;
		else if (a > b && a - b == 1 && a % 2 == 0) return round;
		else round++;

		a = a / 2 + a % 2;
		b = b / 2 + b % 2;

		N /= 2;
	}

	return -1;
}

int main() {

	cin >> N >> a >> b;

	cout << solve();

	return 0;
}
```

처음에 구상했을때는 `vector pair<int,int>` 로 선언해서 두 선수의 값만 1 나머지 선수들은 0 으로 해서 토너먼트가 진행 될 때마다 `vector` 의 크기를 줄여나가는 것이였다. 그런데 막상 구현하다보니 메모리 낭비와 시간이 비효율적이라는 생각이 들었다.

결국엔 두 선수가 만났을 때 몇 라운드인지 출력하면 되는 문제이기 때문에, 배열조차 선언할 필요가 없다는 걸 깨달았다.

그 후엔 최대값이 N이 100000 이기 때문에, for 문을 log(100000) 번 돌릴려고 했으나, 머리가 잘 원활하게 돌아가지 않아서.. while 문안에 N을 줄여나가는 식으로 구현했다. 처음에 else if 문을 넣지 않고 if 문 하나 만을 넣고 아니면 round 수를 증가 시켰었는데, 한번 틀렸었다. 문제 중에 b가 a 보다 크단 말이 없어서 else if 문을 넣었는데 아니나 다를까 정답이였다.

a 와 b 값은 다른 경기 인데, 같은 경기라고 인식 할 수 있는 경우의 수가 있기 때문에, 나머지를 더해줘서 다른 경기로 인식하도록 만들었다.
종료 조건은 인접해있으며, 더 큰 수가 짝수이면 같은 경기 라고 생각하여 round 를 return 하도록 설정했다.
