---
layout: post
title:  "2020-01-03 TIL"
date:   2020-01-03 13:00:59
author: mollangzzang
categories: TIL
tags:	TIL js
cover:  "/assets/TIL.png"
---

#### Event Driven

- 이벤트가 발생할 때 미리 지정해 둔 작업을 수행하는 것을 말한다.

- 이벤트 기반 시스템에서는 특정 이벤트가 발생할 때 어떤 작업을 수행할 것인지 미리 등록을 해야한다.

- 여러 이벤트가 발생했을 때, 어떤 순서로 콜백 함수를 호출 할 지 **이벤트 루프**가 판단하게 된다.

- 함수의 호출부분이 발견되면 호출한 함수를 **호출 스택**에 담는다.

- 함수의 실행이 완료되면 해당 함수는 호출 스택에서 지워진다.

- Event Loop : 이벤트 발생 시 호출할 콜백 함수들을 관리하고, 호출된 콜백 함수의 실행 순서를 결정한다. 노드가 종료될 때까지 작업을 반복하게 된다.

- Task Queue : 이벤트 발생 후 호출될 콜백 함수들을 쌓아두는 곳이다. 콜백들은 이벤트 루프가 정한 순서대로 쌓이게 된다.

- Background : 타이머나 I/O 작업 콜백 , 이벤트 리스너들을 모아두는 곳이다.


#### Ajax

- Ajax는 JavaScript 의 라이브러리 중 하나이며, Asynchronous Javascript And Xml(비동기식 자바스크립트와 xml)의 약어이다.

- 브라우저가 가지고 있는 XMLHttpRequest 객체를 이용해서 전체 페이지를 고치지 않고도 페이지의 일부분 만을 로드하는 기법이며, 요약하면 클라이언트와 서버간에 XML 데이터를 주고 받는 기술이다.

    - 비동기 (async) 방식의 장점은 페이지 리로드의 경우, 전체 리소스를 다시 불러와야하는데 이미지, 스크립트, 기타 코드등 모두 재요청할 경우 불필요한 리소스 낭비가 발생하게 되지만 비동기식 방식을 이용할 경우 필요한 부분만 불러와서 사용 할 수 있다는 장점이 있다.

- XML HttpRequest 객체를 통해 서버에 request를 하는데, Json이나 xml 형태로 필요한 데이터만 받아 갱신한다.

##### 장점

1. 웹페이지의 속도 향상
2. 서버의 처리가 완료 될 때까지 기다리지 않고 처리 가능하다.
3. 서버에서 Data만 전송하면 되어서 전체적인 코드의 양이 줄어든다.
4. 기존 웹에서는 불가능했던 UI를 가능하게 한다.

##### 단점

1. 히스토리 관리가 되지 않아서 보안에 좀 더 신경을 써야한다.
2. 연속으로 데이터를 요청하면 서버 부하가 증가할 수 있다.
3. XMLHttpRequest를 통해 통신을 하는 경우 사용자에게 아무런 정보가 주어지지 않는다. 따라서 아직 요청이 완료되지 않았음에도 사용자가 페이지를 떠나거나 오작동 할 수 있는 가능성이 있다.
4. Ajax를 쓸 수 없는 브라우저에 대한 문제가 있을 수 있다.
5. HTTP Client의 기능이 한정되어 있다.
6. 지원하는 Charset이 한정되어 있다.
7. 스크립트로 작성되어 디버깅이 용이하지 않다.
8. 요청을 남발하면 역으로 서버에 부하가 증가할 수 있다.
