---
layout: post
title:  "2019-12-09-TIL"
date:   2019-12-09 13:00:59
author: mollangzzang
categories: TIL
tags:	TIL js
cover:  "/assets/TIL.png"
---

`console.log(1+1)` 의 결과는 `2`
`console.log('1'+'1')` 의 결과는 `11`

C++ 의 경우 string length 의 경우 length 뒤에 `()` 가 삽입 되어야 하지만, js 의 경우

`console.log('this is string length.'.length)` 와 같은 식을 작성하게 되면 string length 가 return 된다.

js 에서  문자열의 경우 코드가 길어져서 가독성을 위해서라도 줄바꿈을 해주어야 할 필요가있는데, 그 경우엔 `\` 를 사용해주어야 한다.

이를 보완해주기 위한 문법이 template literal 이다.

```
var name = 'mollangzzang';
var letter = 'Dear '+name+'\n\nthis is js example';
```

와 같은 문장을 

```
var name = 'mollangzzang';
var letter = 'Dear ${name}

this is js example';
```

이런 식으로 바꾸어도 동일하게 동작한다. 또한 `${1+1}` 같은 경우는 2로 치환되어서 구동되게 된다.

#### URL

인터넷의 URL을 본다면 같은 파일을 요청해서 받았지만, 받은 페이지는 각각 다르다.

URL을 살펴본다면

`http://opentutorials.org:3000/main?id=HTML&page=12` 라는 가상의 페이지가 있다고 가정하자.

**http** 는 사용자가 서버에 접속할 때 어떠한 방법으로 통신할지 결정하는 부분이며, protocol 이라 부른다.

**opentutorials.org** 는 어떠한 특정한 인터넷에 연결되어있는 컴퓨터를 가리키는 주소이다.

**3000** 은 port 번호이다. 한 대의 컴퓨터에 여러 서버가 있을 경우 클라이언트가 접속 했을 때 어떠한 서버에 연결이 될 지 번호를 알려주는 것이다.

웹서버의 default 는 80번이다.

다음 **main**은 경로이다. id 이하의 부분은 Query string 이라고 한다. 우리가 웹서버에게 어떠한 데이터를 전달하는 것이다. 우리가 읽고 싶은 정보이며, **?**로 시작되어야 하며, **=** 와 **&** 로 구분되어야 한다.

`?id=HTML` 로 시작 되었을 때 id 에 따라 우리는 사용자에게 적당한 컨텐츠를 내놓아야 하는데, 그러려면 일단 id 뒤에 어떠한 값을 받는 방법을 알아야한다. id 값을 받는 방법은 `request.url` 이다.

#### 약자

`fs` 는 file system 의 약자
`ul` 는 unordered list
`ol` 는 ordered list

#### 명령어

windows 에서 상위 디렉토리로 가는 명령어 `cd ..`
windows 에서 해당 디렉토리의 구성품을 보는 명령어 `dir/w`