---
layout: post
title:  "2019-10-19 TIL"
date:   2019-10-19 13:00:59
author: mollangzzang
categories: TIL
tags:	TIL 
cover:  "/assets/TIL.png"
---

### register 변수 와 volatile 변수

`int i` 와 같이 변수를 선언함에 있어서 전역 변수로 선언을 하게 되면 프로그램의 데이터 영역에, 지역 변수로 선언 되면 스택 영역에 변수의 위치가 할당 되게 된다. 지역 변수가 스택 영역에 할당되는 것은 해당 언어의 스펙과 구현에 따라 상이하다. 대부분의 재귀 호출을 허용하는 언어의 경우에는 스택 영역에 그렇지 않다면 데이터 영역에 지역변수를 할당하게 된다.

메모리 계층 구조를 보게 되면 메모리 연산은 CPU의 연산 중 상대적으로 느리게 동작하는 연산 중 하나이다. 이런 점을 개선하기 위해 고안된 방법이 CPU 내에 갯수가 한정적이지만 메모리 처럼 사용할 수 있는 메모리 공간이 있는데 그것이 바로 **레지스터**이다.

그리고 이러한 **레지스터**를 참조하게 해주기 위해서 가능한 한도 내에서 메모리 참조 대신 레지스터를 참조해 달라는 것이 `register int i` 와 같이 선언 하는 것이다.

물론 똑똑한 컴파일러는 알아서 최적화를 해준다고 하지만 지금과 같이 명시적으로 건드릴 수 있다는 것은 알고리즘과 같은 문제를 풀 때 상당히 유용할 수 있을 것 같다.

`volatile int i` 은 해당 변수에 대해 특별한 최적화를 하지 못하도록 컴파일러를 제약하는 키워드이다. 컴파일러가 번역을 하는 도중 개발자의 의도와 다르게 번역되는 것을 방지하기 위해서 사용하는 용도이며, 이 키워드가 선언 되면 컴파일러는 **volatile**키워드가 선언된 변수에 대해서는 무조건 메모리에 접근해야 한다.