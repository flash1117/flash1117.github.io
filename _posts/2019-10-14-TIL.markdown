---
layout: post
title:  "2019-10-14 TIL"
date:   2019-10-14 13:00:59
author: mollangzzang
categories: TIL
tags:	TIL Java
cover:  "/assets/TIL.png"
---

### Hello World! UI 띄우기 ( Desktop Application )

```
import javax.swing.*;   
import java.awt.Dimension;
import java.awt.Toolkit;
public class HelloWorldGUIApp{
    public static void main(String[] args){
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame("HelloWorld GUI");
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.setPreferredSize(new Dimension(800, 300));
                JLabel label = new JLabel("Hello World!!", SwingConstants.RIGHT);
                frame.getContentPane().add(label);
                Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
                frame.setLocation(dim.width/2-400/2, dim.height/2-300/2);

                frame.pack();
                frame.setVisible(true);
            }
        });
    }
}
```

### GET, Post Method

* HTTP 프로토콜을 이용해서 서버에 데이터 (요청 정보)를 전달할 때 사용하는 방식
* GET Method 방식
    - 개념
        - 정보를 조회하기 위한 메서드
        - 서버에서 어떤 데이터를 가져와서 보여주기 위한 용도의 메서드
        - 가져오는 것(Select)
    - 사용 방법
        - URL의 끝에 **?** 가 붙고, 요청 정보가 (Key = value) 형태의 쌍을 이루어 ? 뒤에 붙어서 서버로 전송한다.     
        - 요청 정보가 여러 개일 경우에는 **&** 로 구분한다.
        - `www.urladdress.xyz?name1=value1&name2=value2`
    - 특징
        - URL에 요청 정보를 붙여서 전송한다.
        - URL에 요청 정보가 이어 붙기 때문에 길이 제한이 있어서 대용량의 데이터를 전송하기 어렵다.
            - 한 번 요청 시 전송 데이터 (주솟값 + 파라미터 ) 의 양은 255자로 제한된다. (HTTP/1.1은 2048자)
        - 요청 정보를 사용자가 쉽게 눈으로 확인할 수 있다.
            - POST 방식보다 보안상 취약하다.
        - HTTP 패킷의 Body는 비어 있는 상태로 전송한다.
            - 즉 Body의 데이터 타입을 표현하는 'Content-Type' 필드도 HTTP Request Header에 들어가지 않는다.
        - POST 방식보다 빠르다.
            - GET 방식은 캐싱을 사용할 수 있어서, GET 요청과 그에 대한 응답이 브라우저에 의해 캐쉬된다.

* POST 방식
    - 개념
        - 서버의 값이나 상태를 바꾸기 위한 용도의 메서드
        - 수행하는 것 (Insert, Update, Delete)
    - 사용방법
        - 요청 정보를 HTTP 패킷의 Body 안에 숨겨서 서버로 전송한다.
        - Request Header 의 Content-Type에 해당 데이터 타입이 표현되며, 전송하고자 하는 데이터 타입을 적어줘야 한다.
            - Default: application/octet-stream
            - 단순 txt의 경우 : text/plain
            - 파일의 경우 : multipart/form-date
    - 특징
        - Body 안에 숨겨서 요청 정보를 전송하기 때문에 대용량의 데이터를 전송하기에 적합하다.
        - 클라이언트 쪽에서 데이터를 인코딩하여 서버로 전송하고, 이를 받은 서버 쪽이 해당 데이터를 디코딩한다.
        - GET 방식보다 보안상 안전하다.

* Q. 조회하기 위한 용도로 POST 가 아닌 GET 방식을 사용하는 이유는?

- 설계 원칙에 따라 GET 방식은 서버에게 여러번 요청을 하더라도 동일한 응답이 돌아와야 한다. (Idempotent, 멱등)
    - GET 방식은 **가져오는 것(Select)** 으로, 서버의 데이터나 상태를 변경시키지 않아야 한다.
        - Ex) 게시판의 리스트, 게시글 보기 기능
        - Except) 방문자의 로그 남기기, 글을 읽은 횟수 증가
    - POST 방식은 **수행하는 것** 으로 , 서버의 값이나 상태를 바꾸기 위한 용도이다.
        - Ex) 게시판에 글쓰기 기능

- 웹에서 모든 리소스는 Link 할 수 있는 URL을 가지고 있어야한다.
    - 어떤 웹페이지를 보고 있을 때, 다른 사람한테 그 주소를 주기 위해서 주소창의 URL을 복사해서 줄 수 있어야 한다.
    - 즉, 어떤 웹페이지를 조회할 때 원하는 페이지로 바로 이동하거나 이동 시키기 위해서는 해당 링크의 정보가 필요하다.
    - 이때, POST 방식을 사용할 경우에 값 (링크의 정보)이 Body에 있기 때문에 URL 만 전달할 수 없으므로 GET 방식을 이용해야 한다. 그러나 글을 저장하는 경우에는 URL을 제공할 필요가 없기 때문에 POST방식을 사용한다.

##### Ref.
[Link](https://github.com/WeareSoft/tech-interview/blob/master/contents/network.md)